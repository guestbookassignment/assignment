package com.tamilbazaar.mapper;

import com.tamilbazaar.dto.UserDto;

import com.tamilbazaar.entity.UserDetails;

import java.util.ArrayList;

import java.util.List;

import javax.annotation.Generated;

@Generated(

    value = "org.mapstruct.ap.MappingProcessor",

    date = "2021-04-29T19:41:04+0100",

    comments = "version: 1.1.0.Final, compiler: javac, environment: Java 1.8.0_231 (Oracle Corporation)"

)

public class UserDetailsMapperImpl extends UserDetailsMapper {

    @Override

    public UserDetails convertToEntity(UserDto dto) {

        if ( dto == null ) {

            return null;
        }

        UserDetails userDetails = new UserDetails();

        userDetails.setEnabled( dto.isEnabled() );

        userDetails.setUsername( dto.getUsername() );

        userDetails.setPassword( dto.getPassword() );

        userDetails.setId( dto.getId() );

        userDetails.setFirstName( dto.getFirstName() );

        userDetails.setLastName( dto.getLastName() );

        userDetails.setPhoneNumber( dto.getPhoneNumber() );

        return userDetails;
    }

    @Override

    public UserDto convertToDTO(UserDetails entity) {

        if ( entity == null ) {

            return null;
        }

        UserDto userDto = new UserDto();

        userDto.setEnabled( entity.isEnabled() );

        userDto.setUsername( entity.getUsername() );

        userDto.setPassword( entity.getPassword() );

        userDto.setId( entity.getId() );

        userDto.setFirstName( entity.getFirstName() );

        userDto.setLastName( entity.getLastName() );

        userDto.setPhoneNumber( entity.getPhoneNumber() );

        return userDto;
    }

    @Override

    public List<UserDetails> convertToEntityList(List<UserDto> dtos) {

        if ( dtos == null ) {

            return null;
        }

        List<UserDetails> list = new ArrayList<UserDetails>();

        for ( UserDto userDto : dtos ) {

            list.add( convertToEntity( userDto ) );
        }

        return list;
    }

    @Override

    public List<UserDto> convertToDTOList(List<UserDetails> entities) {

        if ( entities == null ) {

            return null;
        }

        List<UserDto> list = new ArrayList<UserDto>();

        for ( UserDetails userDetails : entities ) {

            list.add( convertToDTO( userDetails ) );
        }

        return list;
    }
}

