package com.tamilbazaar.mapper;

import com.tamilbazaar.dto.CategoryDto;

import com.tamilbazaar.entity.Category;

import java.util.ArrayList;

import java.util.List;

import javax.annotation.Generated;

@Generated(

    value = "org.mapstruct.ap.MappingProcessor",

    date = "2021-04-29T19:41:04+0100",

    comments = "version: 1.1.0.Final, compiler: javac, environment: Java 1.8.0_231 (Oracle Corporation)"

)

public class CategoryMapperImpl extends CategoryMapper {

    @Override

    public CategoryDto convertToDTO(Category entity) {

        if ( entity == null ) {

            return null;
        }

        CategoryDto categoryDto = new CategoryDto();

        categoryDto.setCategoryId( entity.getCategoryId() );

        categoryDto.setName( entity.getName() );

        categoryDto.setDescription( entity.getDescription() );

        categoryDto.setParentId( convertToDTO( entity.getParentId() ) );

        return categoryDto;
    }

    @Override

    public List<CategoryDto> convertToDTOList(List<Category> entities) {

        if ( entities == null ) {

            return null;
        }

        List<CategoryDto> list = new ArrayList<CategoryDto>();

        for ( Category category : entities ) {

            list.add( convertToDTO( category ) );
        }

        return list;
    }

    @Override

    public Category convertToEntity(CategoryDto dto) {

        if ( dto == null ) {

            return null;
        }

        Category category = new Category();

        category.setCategoryId( dto.getCategoryId() );

        category.setName( dto.getName() );

        category.setDescription( dto.getDescription() );

        category.setParentId( convertToEntity( dto.getParentId() ) );

        return category;
    }

    @Override

    public List<Category> convertToEntityList(List<CategoryDto> dto) {

        if ( dto == null ) {

            return null;
        }

        List<Category> list = new ArrayList<Category>();

        for ( CategoryDto categoryDto : dto ) {

            list.add( convertToEntity( categoryDto ) );
        }

        return list;
    }
}

